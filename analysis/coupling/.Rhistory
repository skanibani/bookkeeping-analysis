mutate(module = as.factor(module),
efferent_coupling = as.integer(efferent_coupling)) %>%
select(module, efferent_coupling)
set_coupling_incoming <- import_coupling_outgoing %>%
semi_join(set_module_names, by="module") %>%
mutate(new_path = map2(module, message, func_construct_absolute_path))
View(set_coupling_incoming)
set_coupling_outgoing <- import_coupling_outgoing %>%
semi_join(set_module_names, by="module") %>%
mutate(new_path = map2(module, message, func_construct_absolute_path)) %>%
group_by(module) %>%
mutate(outgoing_coupling = n()) %>%
ungroup() %>%
distinct(module, .keep_all = TRUE) %>%
mutate(module = as.factor(module),
outgoing_coupling = as.integer(outgoing_coupling)) %>%
select(module, outgoing_coupling)
set_coupling_incoming <- import_coupling_outgoing %>%
semi_join(set_module_names, by="module") %>%
mutate(new_path = map2(module, message, func_construct_absolute_path)) %>%
rename(incoming_connections = new_path) %>%
select(incoming_connections)
set_coupling_incoming <- import_coupling_outgoing %>%
semi_join(set_module_names, by="module") %>%
mutate(new_path = map2(module, message, func_construct_absolute_path)) %>%
rename(incoming_connections = new_path) %>%
select(incoming_connections) %>%
mutate(incoming_connections = as.factor(as.character(incoming_connections))) %>%
group_by(incoming_connections) %>%
summarise(afferent_coupling = n()) %>%
ungroup()
set_coupling_incoming <- import_coupling_outgoing %>%
semi_join(set_module_names, by="module") %>%
mutate(new_path = map2(module, message, func_construct_absolute_path)) %>%
rename(incoming_connections = new_path) %>%
select(incoming_connections) %>%
mutate(incoming_connections = as.factor(as.character(incoming_connections))) %>%
group_by(incoming_connections) %>%
summarise(afferent_coupling = n()) %>%
ungroup() %>%
mutate(incoming_connections = as.factor(as.character(incoming_connections)))
set_coupling_incoming <- import_coupling_outgoing %>%
semi_join(set_module_names, by="module") %>%
mutate(new_path = map2(module, message, func_construct_absolute_path)) %>%
rename(incoming_connections = new_path) %>%
select(incoming_connections) %>%
mutate(incoming_connections = as.factor(as.character(incoming_connections))) %>%
group_by(incoming_connections) %>%
summarise(afferent_coupling = n()) %>%
ungroup() %>%
mutate(incoming_connections = as.factor(as.character(incoming_connections))) %>%
group_by(incoming_connections) %>%
mutate(afferent_coupling = sum(afferent_coupling)) %>%
distinct(afferent_coupling, .keep_all = TRUE)
set_coupling_incoming <- import_coupling_outgoing %>%
semi_join(set_module_names, by="module") %>%
mutate(new_path = map2(module, message, func_construct_absolute_path)) %>%
rename(incoming_connections = new_path) %>%
select(incoming_connections) %>%
mutate(incoming_connections = as.factor(as.character(incoming_connections))) %>%
group_by(incoming_connections) %>%
summarise(afferent_coupling = n()) %>%
ungroup() %>%
mutate(incoming_connections = as.factor(as.character(incoming_connections))) %>%
group_by(incoming_connections) %>%
mutate(afferent_coupling = sum(afferent_coupling)) %>%
distinct(afferent_coupling, .keep_all = TRUE) %>%
ungroup() %>%
rename(module = incoming_connections,
incoming_coupling = afferent_coupling)
set_coupling <- set_coupling_outgoing %>%
left_join(set_coupling_incoming, by ="module")
View(set_coupling)
set_coupling <- set_coupling_incoming %>%
left_join(set_coupling_outgoing, by="module")
View(set_coupling)
set_coupling_incoming <- import_coupling_outgoing %>%
semi_join(set_module_names, by="module")
library(tidyverse)
library(R.utils)
# Legal existing files and folders
import_files <- as_tibble(list.files("../../repository/Bookkeeping/lib/", recursive = TRUE, include.dirs = FALSE))
import_existing_folders <- as_tibble(list.dirs("../../repository/Bookkeeping/lib/", recursive = TRUE, full.names = FALSE))
# Existing folders in the bookkeeping project
set_folders <- import_existing_folders %>%
rename(folder = value) %>%
mutate(folder = str_extract(folder, "[a-zA-Z]*$")) %>%
filter(!folder == "") %>%
distinct(folder) %>%
arrange(folder)
vec_folders <- as_vector(set_folders)
set_module_names <- import_files %>%
rename(module = value) %>%
filter(!str_detect(module, "migrations"),
!str_detect(module, "assets"),
!str_detect(module, "seeders"),
!str_detect(module, "undefined32")) %>%
arrange(module) %>%
mutate(module = paste("/lib/", module, sep=""))
func_construct_absolute_path <- function(module_path, relative_path) {
# First filter any string that should be ignored.
if (str_detect(relative_path, "/js/src/") | !str_detect(relative_path, "/") | str_detect(relative_path, "@aliceo2/web-ui")) {
relative_path
} else if (!str_detect(relative_path, ".js$")) {
# Things that could be folders, check if they are in the folder set.
if (str_extract(relative_path, "[a-zA-Z]*$") %in% vec_folders) {
relative_path_suffix <- paste0(relative_path, "/index.js")
getAbsolutePath(relative_path_suffix, str_remove(module_path, "/[:alnum:]*.js$"))
} else {
# Not a folder exact module reference in
# ../
# ./
if (str_detect(relative_path, "\\.\\./$")){
# Access previous folder
relative_path_suffix <- paste0(relative_path, "index.js")
getAbsolutePath(relative_path_suffix, str_remove(module_path, "/[:alnum:]*.js$"))
}else if (str_detect(relative_path, "^\\./") | str_detect(relative_path, "^\\../")) {
relative_path_suffix <- paste0(relative_path, ".js")
getAbsolutePath(relative_path_suffix, str_remove(module_path, "/[:alnum:]*.js$"))
}
}
} else {
# it ends with .js and is not a folder
getAbsolutePath(relative_path, str_remove(module_path, "/[:alnum:]*.js$"))
}
}
import_coupling_outgoing <- read_csv("data/coupling.csv") %>%
select(`filePath`, `message`) %>%
rename(module = filePath) %>%
filter(!str_detect(module, "migrations"),
!str_detect(module, "assets"),
!str_detect(module, "seeders"),
!str_detect(module, "undefined32")) %>%
mutate(module = str_extract(module, "/lib.*.js")) %>%
mutate(message = ifelse(message == "..", "../", message)) %>%
drop_na()
View(import_coupling_outgoing)
View(set_module_names)
# Contains only existing modules in the lib folder.
set_coupling_outgoing <- import_coupling_outgoing %>%
semi_join(set_module_names, by="module") %>%
mutate(new_path = map2(module, message, func_construct_absolute_path)) %>%
group_by(module) %>%
mutate(outgoing_coupling = n()) %>%
ungroup() %>%
distinct(module, .keep_all = TRUE) %>%
mutate(module = as.factor(module),
outgoing_coupling = as.integer(outgoing_coupling)) %>%
select(module, outgoing_coupling)
set_coupling_incoming <- import_coupling_outgoing %>%
semi_join(set_module_names, by="module") %>%
mutate(new_path = map2(module, message, func_construct_absolute_path)) %>%
rename(incoming_connections = new_path) %>%
select(incoming_connections) %>%
mutate(incoming_connections = as.factor(as.character(incoming_connections))) %>%
group_by(incoming_connections) %>%
summarise(afferent_coupling = n()) %>%
ungroup() %>%
mutate(incoming_connections = as.factor(as.character(incoming_connections))) %>%
group_by(incoming_connections) %>%
mutate(afferent_coupling = sum(afferent_coupling)) %>%
distinct(afferent_coupling, .keep_all = TRUE) %>%
ungroup() %>%
rename(module = incoming_connections,
incoming_coupling = afferent_coupling)
set_coupling <- set_coupling_incoming %>%
left_join(set_coupling_outgoing, by="module")
View(set_coupling)
View(set_module_names)
set_coupling <- set_coupling_incoming %>%
left_join(set_coupling_outgoing, by="module") %>%
anti_join(set_module_names, by="module")
View(set_coupling)
set_coupling_incoming <- import_coupling_outgoing %>%
semi_join(set_module_names, by="module") %>%
mutate(new_path = map2(module, message, func_construct_absolute_path)) %>%
rename(incoming_connections = new_path) %>%
select(incoming_connections) %>%
mutate(incoming_connections = as.factor(as.character(incoming_connections))) %>%
group_by(incoming_connections) %>%
summarise(afferent_coupling = n()) %>%
ungroup() %>%
mutate(incoming_connections = as.factor(as.character(incoming_connections))) %>%
group_by(incoming_connections) %>%
mutate(afferent_coupling = sum(afferent_coupling)) %>%
distinct(afferent_coupling, .keep_all = TRUE) %>%
ungroup() %>%
rename(module = incoming_connections,
incoming_coupling = afferent_coupling)
library(tidyverse)
library(R.utils)
# Legal existing files and folders
import_files <- as_tibble(list.files("../../repository/Bookkeeping/lib/", recursive = TRUE, include.dirs = FALSE))
import_existing_folders <- as_tibble(list.dirs("../../repository/Bookkeeping/lib/", recursive = TRUE, full.names = FALSE))
# Existing folders in the bookkeeping project
set_folders <- import_existing_folders %>%
rename(folder = value) %>%
mutate(folder = str_extract(folder, "[a-zA-Z]*$")) %>%
filter(!folder == "") %>%
distinct(folder) %>%
arrange(folder)
vec_folders <- as_vector(set_folders)
set_module_names <- import_files %>%
rename(module = value) %>%
filter(!str_detect(module, "migrations"),
!str_detect(module, "assets"),
!str_detect(module, "seeders"),
!str_detect(module, "undefined32")) %>%
arrange(module) %>%
mutate(module = paste("/lib/", module, sep=""))
func_construct_absolute_path <- function(module_path, relative_path) {
# First filter any string that should be ignored.
if (str_detect(relative_path, "/js/src/") | !str_detect(relative_path, "/") | str_detect(relative_path, "@aliceo2/web-ui")) {
relative_path
} else if (!str_detect(relative_path, ".js$")) {
# Things that could be folders, check if they are in the folder set.
if (str_extract(relative_path, "[a-zA-Z]*$") %in% vec_folders) {
relative_path_suffix <- paste0(relative_path, "/index.js")
getAbsolutePath(relative_path_suffix, str_remove(module_path, "/[:alnum:]*.js$"))
} else {
# Not a folder exact module reference in
# ../
# ./
if (str_detect(relative_path, "\\.\\./$")){
# Access previous folder
relative_path_suffix <- paste0(relative_path, "index.js")
getAbsolutePath(relative_path_suffix, str_remove(module_path, "/[:alnum:]*.js$"))
}else if (str_detect(relative_path, "^\\./") | str_detect(relative_path, "^\\../")) {
relative_path_suffix <- paste0(relative_path, ".js")
getAbsolutePath(relative_path_suffix, str_remove(module_path, "/[:alnum:]*.js$"))
}
}
} else {
# it ends with .js and is not a folder
getAbsolutePath(relative_path, str_remove(module_path, "/[:alnum:]*.js$"))
}
}
import_coupling_outgoing <- read_csv("data/coupling.csv") %>%
select(`filePath`, `message`) %>%
rename(module = filePath) %>%
filter(!str_detect(module, "migrations"),
!str_detect(module, "assets"),
!str_detect(module, "seeders"),
!str_detect(module, "undefined32")) %>%
mutate(module = str_extract(module, "/lib.*.js")) %>%
mutate(message = ifelse(message == "..", "../", message)) %>%
drop_na()
# Contains only existing modules in the lib folder.
set_coupling_outgoing <- import_coupling_outgoing %>%
semi_join(set_module_names, by="module") %>%
mutate(new_path = map2(module, message, func_construct_absolute_path)) %>%
group_by(module) %>%
mutate(outgoing_coupling = n()) %>%
ungroup() %>%
distinct(module, .keep_all = TRUE) %>%
mutate(module = as.factor(module),
outgoing_coupling = as.integer(outgoing_coupling)) %>%
select(module, outgoing_coupling)
set_coupling_incoming <- import_coupling_outgoing %>%
semi_join(set_module_names, by="module") %>%
mutate(new_path = map2(module, message, func_construct_absolute_path)) %>%
rename(incoming_connections = new_path) %>%
select(incoming_connections) %>%
mutate(incoming_connections = as.factor(as.character(incoming_connections))) %>%
group_by(incoming_connections) %>%
summarise(afferent_coupling = n()) %>%
ungroup() %>%
mutate(incoming_connections = as.factor(as.character(incoming_connections))) %>%
group_by(incoming_connections) %>%
mutate(afferent_coupling = sum(afferent_coupling)) %>%
distinct(afferent_coupling, .keep_all = TRUE) %>%
ungroup() %>%
rename(module = incoming_connections,
incoming_coupling = afferent_coupling)
mismatching_modules <- anti_join(set_coupling_incoming, set_coupling_outgoing, by="module")
View(mismatching_modules)
illegal_modules_incoming <- anti_joing(set_coupling_incoming, set_module_names, by="module")
illegal_modules_incoming <- anti_join(set_coupling_incoming, set_module_names, by="module")
View(illegal_modules_incoming)
illegal_modules_outgoing <- anti_join(set_coupling_outgoing, set_module_names, by="module")
View(illegal_modules_outgoing)
View(illegal_modules_incoming)
illegal_modules_incoming <- set_coupling_incoming %>%
anti_join(set_module_names, by="module") %>%
slice(c(3, 17))
View(illegal_modules_incoming)
illegal_modules_incoming <- set_coupling_incoming %>%
anti_join(set_module_names, by="module") %>%
slice(c(3:17))
View(illegal_modules_incoming)
illegal_modules_incoming <- set_coupling_incoming %>%
anti_join(set_module_names, by="module") %>%
slice(c(4:17))
illegal_modules_incoming <- set_coupling_incoming %>%
anti_join(set_module_names, by="module") %>%
slice(c(4:16))
set_coupling_incoming <- import_coupling_outgoing %>%
semi_join(set_module_names, by="module") %>%
mutate(new_path = map2(module, message, func_construct_absolute_path)) %>%
rename(incoming_connections = new_path) %>%
select(incoming_connections) %>%
mutate(incoming_connections = as.factor(as.character(incoming_connections))) %>%
group_by(incoming_connections) %>%
summarise(afferent_coupling = n()) %>%
ungroup() %>%
mutate(incoming_connections = as.factor(as.character(incoming_connections))) %>%
group_by(incoming_connections) %>%
mutate(afferent_coupling = sum(afferent_coupling)) %>%
distinct(afferent_coupling, .keep_all = TRUE) %>%
ungroup() %>%
rename(module = incoming_connections,
incoming_coupling = afferent_coupling)
View(set_coupling_incoming)
illegal_modules_incoming
set_coupling_incoming <- import_coupling_outgoing %>%
semi_join(set_module_names, by="module") %>%
mutate(new_path = map2(module, message, func_construct_absolute_path)) %>%
rename(incoming_connections = new_path) %>%
select(incoming_connections) %>%
mutate(incoming_connections = as.factor(as.character(incoming_connections))) %>%
group_by(incoming_connections) %>%
summarise(afferent_coupling = n()) %>%
ungroup() %>%
mutate(incoming_connections = as.factor(as.character(incoming_connections))) %>%
group_by(incoming_connections) %>%
mutate(afferent_coupling = sum(afferent_coupling)) %>%
distinct(afferent_coupling, .keep_all = TRUE) %>%
ungroup() %>%
rename(module = incoming_connections,
incoming_coupling = afferent_coupling) %>%
mutate(module = ifelse(module == "/lib/config/database/index.js", "/lib/config/database.js",
ifelse(module == "/lib/database/models/attachment/index.js", "/lib/database/models/attachments.js",
ifelse(module == "/lib/database/models/log/index.js", "/lib/database/models/log.js",
ifelse(module == "/lib/database/models/run/index.js", "/lib/database/models/run.js",
ifelse(module == "/lib/database/models/subsystem/index.js", "/lib/database/models/subsystem.js",
ifelse(module == "/lib/database/models/tag/index.js", "/lib/database/models/tag.js",
ifelse(module == "/lib/database/models/user/index.js", "/lib/database/models/user.js",
ifelse(module == "/lib/server/controllers/utilities/index.js", "/lib/server/utilities/index.js",
ifelse(module == "/lib/server/domain/index.js", "/lib/domain/index.js",
ifelse(module == "/lib/server/middleware/multer.middleware/index.js", "/lib/server/middleware/multer.middleware.js",
ifelse(module == "/lib/server/routers/controllers/index.js", "/lib/server/controllers/index.js",
ifelse(module == "/lib/server/routers/middleware/index.js", "/lib/server/middleware/index.js",
ifelse(module == "/lib/server/usecases/index.js", "/lib/usecases/index.js", module))))))))))))))
illegal_modules_incoming <- set_coupling_incoming %>%
anti_join(set_module_names, by="module")
View(illegal_modules_incoming)
set_coupling_incoming <- import_coupling_outgoing %>%
semi_join(set_module_names, by="module") %>%
mutate(new_path = map2(module, message, func_construct_absolute_path)) %>%
rename(incoming_connections = new_path) %>%
select(incoming_connections) %>%
mutate(incoming_connections = as.factor(as.character(incoming_connections))) %>%
group_by(incoming_connections) %>%
summarise(afferent_coupling = n()) %>%
ungroup() %>%
mutate(incoming_connections = as.factor(as.character(incoming_connections))) %>%
group_by(incoming_connections) %>%
mutate(afferent_coupling = sum(afferent_coupling)) %>%
distinct(afferent_coupling, .keep_all = TRUE) %>%
ungroup() %>%
rename(module = incoming_connections,
incoming_coupling = afferent_coupling) %>%
mutate(module = ifelse(module == "/lib/config/database/index.js", "/lib/config/database.js",
ifelse(module == "/lib/database/models/attachment/index.js", "/lib/database/models/attachments.js",
ifelse(module == "/lib/database/models/log/index.js", "/lib/database/models/log.js",
ifelse(module == "/lib/database/models/run/index.js", "/lib/database/models/run.js",
ifelse(module == "/lib/database/models/subsystem/index.js", "/lib/database/models/subsystem.js",
ifelse(module == "/lib/database/models/tag/index.js", "/lib/database/models/tag.js",
ifelse(module == "/lib/database/models/user/index.js", "/lib/database/models/user.js",
ifelse(module == "/lib/server/controllers/utilities/index.js", "/lib/server/utilities/index.js",
ifelse(module == "/lib/server/domain/index.js", "/lib/domain/index.js",
ifelse(module == "/lib/server/middleware/multer.middleware/index.js", "/lib/server/middleware/multer.middleware.js",
ifelse(module == "/lib/server/routers/controllers/index.js", "/lib/server/controllers/index.js",
ifelse(module == "/lib/server/routers/middleware/index.js", "/lib/server/middleware/index.js",
ifelse(module == "/lib/server/usecases/index.js", "/lib/usecases/index.js", module))))))))))))))
View(set_coupling_incoming)
set_coupling_incoming <- import_coupling_outgoing %>%
semi_join(set_module_names, by="module") %>%
mutate(new_path = map2(module, message, func_construct_absolute_path)) %>%
rename(incoming_connections = new_path) %>%
select(incoming_connections) %>%
mutate(incoming_connections = as.factor(as.character(incoming_connections))) %>%
group_by(incoming_connections) %>%
summarise(afferent_coupling = n()) %>%
ungroup() %>%
mutate(incoming_connections = as.factor(as.character(incoming_connections))) %>%
group_by(incoming_connections) %>%
mutate(afferent_coupling = sum(afferent_coupling)) %>%
distinct(afferent_coupling, .keep_all = TRUE) %>%
ungroup()
set_coupling_incoming <- import_coupling_outgoing %>%
semi_join(set_module_names, by="module") %>%
mutate(new_path = map2(module, message, func_construct_absolute_path)) %>%
rename(incoming_connections = new_path) %>%
select(incoming_connections) %>%
mutate(incoming_connections = as.factor(as.character(incoming_connections))) %>%
group_by(incoming_connections) %>%
summarise(afferent_coupling = n()) %>%
ungroup() %>%
mutate(incoming_connections = as.factor(as.character(incoming_connections))) %>%
group_by(incoming_connections) %>%
mutate(afferent_coupling = sum(afferent_coupling)) %>%
distinct(afferent_coupling, .keep_all = TRUE) %>%
ungroup() %>%
rename(module = incoming_connections,
incoming_coupling = afferent_coupling) %>%
mutate(module = as.character(module)) %>%
mutate(module = ifelse(module == "/lib/config/database/index.js", "/lib/config/database.js",
ifelse(module == "/lib/database/models/attachment/index.js", "/lib/database/models/attachments.js",
ifelse(module == "/lib/database/models/log/index.js", "/lib/database/models/log.js",
ifelse(module == "/lib/database/models/run/index.js", "/lib/database/models/run.js",
ifelse(module == "/lib/database/models/subsystem/index.js", "/lib/database/models/subsystem.js",
ifelse(module == "/lib/database/models/tag/index.js", "/lib/database/models/tag.js",
ifelse(module == "/lib/database/models/user/index.js", "/lib/database/models/user.js",
ifelse(module == "/lib/server/controllers/utilities/index.js", "/lib/server/utilities/index.js",
ifelse(module == "/lib/server/domain/index.js", "/lib/domain/index.js",
ifelse(module == "/lib/server/middleware/multer.middleware/index.js", "/lib/server/middleware/multer.middleware.js",
ifelse(module == "/lib/server/routers/controllers/index.js", "/lib/server/controllers/index.js",
ifelse(module == "/lib/server/routers/middleware/index.js", "/lib/server/middleware/index.js",
ifelse(module == "/lib/server/usecases/index.js", "/lib/usecases/index.js", module))))))))))))))
illegal_modules_incoming <- set_coupling_incoming %>%
anti_join(set_module_names, by="module")
View(illegal_modules_incoming)
View(set_module_names)
set_coupling_incoming <- import_coupling_outgoing %>%
semi_join(set_module_names, by="module") %>%
mutate(new_path = map2(module, message, func_construct_absolute_path)) %>%
rename(incoming_connections = new_path) %>%
select(incoming_connections) %>%
mutate(incoming_connections = as.factor(as.character(incoming_connections))) %>%
group_by(incoming_connections) %>%
summarise(afferent_coupling = n()) %>%
ungroup() %>%
mutate(incoming_connections = as.factor(as.character(incoming_connections))) %>%
group_by(incoming_connections) %>%
mutate(afferent_coupling = sum(afferent_coupling)) %>%
distinct(afferent_coupling, .keep_all = TRUE) %>%
ungroup() %>%
rename(module = incoming_connections,
incoming_coupling = afferent_coupling) %>%
mutate(module = as.character(module)) %>%
mutate(module = ifelse(module == "/lib/config/database/index.js", "/lib/config/database.js",
ifelse(module == "/lib/database/models/attachment/index.js", "/lib/database/models/attachment.js",
ifelse(module == "/lib/database/models/log/index.js", "/lib/database/models/log.js",
ifelse(module == "/lib/database/models/run/index.js", "/lib/database/models/run.js",
ifelse(module == "/lib/database/models/subsystem/index.js", "/lib/database/models/subsystem.js",
ifelse(module == "/lib/database/models/tag/index.js", "/lib/database/models/tag.js",
ifelse(module == "/lib/database/models/user/index.js", "/lib/database/models/user.js",
ifelse(module == "/lib/server/controllers/utilities/index.js", "/lib/server/utilities/index.js",
ifelse(module == "/lib/server/domain/index.js", "/lib/domain/index.js",
ifelse(module == "/lib/server/middleware/multer.middleware/index.js", "/lib/server/middleware/multer.middleware.js",
ifelse(module == "/lib/server/routers/controllers/index.js", "/lib/server/controllers/index.js",
ifelse(module == "/lib/server/routers/middleware/index.js", "/lib/server/middleware/index.js",
ifelse(module == "/lib/server/usecases/index.js", "/lib/usecases/index.js", module))))))))))))))
illegal_modules_incoming <- set_coupling_incoming %>%
anti_join(set_module_names, by="module")
set_coupling_incoming <- import_coupling_outgoing %>%
semi_join(set_module_names, by="module") %>%
mutate(new_path = map2(module, message, func_construct_absolute_path)) %>%
rename(incoming_connections = new_path) %>%
select(incoming_connections) %>%
mutate(incoming_connections = as.factor(as.character(incoming_connections))) %>%
group_by(incoming_connections) %>%
summarise(afferent_coupling = n()) %>%
ungroup() %>%
mutate(incoming_connections = as.factor(as.character(incoming_connections))) %>%
group_by(incoming_connections) %>%
mutate(afferent_coupling = sum(afferent_coupling)) %>%
distinct(afferent_coupling, .keep_all = TRUE) %>%
ungroup() %>%
rename(module = incoming_connections,
incoming_coupling = afferent_coupling) %>%
mutate(module = as.character(module)) %>%
mutate(module = ifelse(module == "/lib/config/database/index.js", "/lib/config/database.js",
ifelse(module == "/lib/database/models/attachment/index.js", "/lib/database/models/attachment.js",
ifelse(module == "/lib/database/models/log/index.js", "/lib/database/models/log.js",
ifelse(module == "/lib/database/models/run/index.js", "/lib/database/models/run.js",
ifelse(module == "/lib/database/models/subsystem/index.js", "/lib/database/models/subsystem.js",
ifelse(module == "/lib/database/models/tag/index.js", "/lib/database/models/tag.js",
ifelse(module == "/lib/database/models/user/index.js", "/lib/database/models/user.js",
ifelse(module == "/lib/server/controllers/utilities/index.js", "/lib/server/utilities/index.js",
ifelse(module == "/lib/server/domain/index.js", "/lib/domain/index.js",
ifelse(module == "/lib/server/middleware/multer.middleware/index.js", "/lib/server/middleware/multer.middleware.js",
ifelse(module == "/lib/server/routers/controllers/index.js", "/lib/server/controllers/index.js",
ifelse(module == "/lib/server/routers/middleware/index.js", "/lib/server/middleware/index.js",
ifelse(module == "/lib/server/usecases/index.js", "/lib/usecases/index.js", module)))))))))))))) %>%
mutate(module = as.factor(module))
illegal_modules_outgoing <- anti_join(set_coupling_outgoing, set_module_names, by="module")
mismatching_modules <- anti_join(set_coupling_incoming, set_coupling_outgoing, by="module")
View(mismatching_modules)
set_coupling <- set_coupling_incoming %>%
left_join(set_coupling_outgoing, by = "module")
View(set_coupling)
set_coupling <- set_coupling_incoming %>%
left_join(set_coupling_outgoing, by = "module") %>%
mutate(outgoing_coupling = ifelse(is.na(outgoing_coupling), 0, outgoing_coupling))
View(set_coupling)
set_coupling_modules <- set_coupling %>%
semi_join(set_module_names)
set_coupling_modules <- set_coupling %>%
semi_join(set_module_names, by="module")
View(set_coupling_modules)
calc_instability <- function (efferent_coupling, afferent_coupling) {
if (!is.na(efferent_coupling) && !is.na(afferent_coupling)) {
efferent_coupling / (efferent_coupling + afferent_coupling)
}
}
set_coupling_modules <- set_coupling %>%
semi_join(set_module_names, by="module") %>%
mutate(instability = calc_instability(outgoing_coupling, incoming_coupling))
View(set_coupling_modules)
write_csv(set_coupling_modules, "set_coupling_modules.csv")
